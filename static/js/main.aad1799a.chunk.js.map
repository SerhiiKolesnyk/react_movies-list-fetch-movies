{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/FindMovie/FindMovie.js","api/getFilm.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","FindMovie","addMovie","useState","setTitle","setMovie","error","setError","htmlFor","type","id","placeholder","classNames","value","onChange","target","onClick","filmTitle","fetch","then","response","json","data","Response","Title","Plot","Poster","imdbID","disabled","App","setMovies","newMovie","some","currentMovies","ReactDOM","render","document","getElementById"],"mappings":"+wEAIaA,G,kBAAY,SAAC,GAAD,IACvBC,EADuB,EACvBA,MADuB,IAEvBC,mBAFuB,MAET,GAFS,EAGvBC,EAHuB,EAGvBA,OACAC,EAJuB,EAIvBA,QAJuB,OAMvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aC/BKK,EAAa,SAAC,GAAD,QACxBC,cADwB,MACf,GADe,SAGxB,yBAAKL,UAAU,UACZK,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,S,gBCF3BG,G,MAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC1B,EAA0BC,mBAAS,IAAnC,mBAAOhB,EAAP,KAAciB,EAAd,KACA,EAA0BD,mBAAS,MAAnC,mBAAOL,EAAP,KAAcO,EAAd,KACA,EAA0BF,oBAAS,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAgCA,OACE,oCACE,0BAAMhB,UAAU,cACd,yBAAKA,UAAU,SACb,2BAAOA,UAAU,QAAQiB,QAAQ,eAAjC,eAIA,yBAAKjB,UAAU,WACb,2BACEkB,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZpB,UAAWqB,IAAW,QAAS,CAAE,YAAaN,IAC9CO,MAAO1B,EACP2B,SAAU,YAAiB,IAAdC,EAAa,EAAbA,OACXX,EAASW,EAAOF,OAChBN,GAAS,OAKdD,GAEC,uBAAGf,UAAU,kBAAb,yCAQJ,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,WACb,4BACEkB,KAAK,SACLlB,UAAU,kBACVyB,QAnEQ,WCZC,IAAAC,KDaX9B,ECbwB+B,MAAM,GAAD,OAFxB,+CAEwB,OAAeD,IACrDE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WDatBF,MAAK,SAACG,GACL,GAAsB,UAAlBA,EAAKC,SAIP,OAHAhB,GAAS,QACTF,EAAS,MAKX,IACEmB,EAIEF,EAJFE,MACAC,EAGEH,EAHFG,KACAC,EAEEJ,EAFFI,OACAC,EACEL,EADFK,OAGFtB,EAAS,CACPlB,MAAOqC,EACPpC,YAAaqC,EACbpC,OAAQqC,EACRpC,QAAQ,8BAAD,OAAgCqC,EAAhC,KACP3B,OAAQ2B,IAGVpB,GAAS,GACTH,EAAS,SAsCL,iBASF,yBAAKb,UAAU,WACb,4BACEkB,KAAK,SACLlB,UAAU,oBACVyB,QAAS,WACPd,EAASJ,GACTO,EAAS,OAEXuB,UAAW9B,GAPb,sBAeLA,GAEC,yBAAKP,UAAU,aACb,wBAAIA,UAAU,SAAd,WACA,kBAAC,EAAcO,O,OErGZ+B,EAAM,WACjB,MAA4B1B,mBAASmB,GAArC,mBAAO1B,EAAP,KAAekC,EAAf,KAcA,OACE,yBAAKvC,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYK,OAAQA,KAEtB,yBAAKL,UAAU,WACb,kBAAC,EAAD,CAAWW,SAlBA,SAAC6B,GAChB,IAAQ/B,EAAW+B,EAAX/B,OACmBJ,EAAOoC,MAAK,SAAAlC,GAAK,OAAIA,EAAME,SAAWA,MAG/D8B,GAAU,SAAAG,GAAa,4BAClBA,GADkB,CAErBF,aCXRG,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.aad1799a.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\nimport { getFilm } from '../../api/getFilm';\n\nexport const FindMovie = ({ addMovie }) => {\n  const [title, setTitle] = useState('');\n  const [movie, setMovie] = useState(null);\n  const [error, setError] = useState(false);\n\n  const movieSearch = () => {\n    getFilm(title)\n      .then((data) => {\n        if (data.Response === 'False') {\n          setError(true);\n          setMovie(null);\n\n          return;\n        }\n\n        const {\n          Title,\n          Plot,\n          Poster,\n          imdbID,\n        } = data;\n\n        setMovie({\n          title: Title,\n          description: Plot,\n          imgUrl: Poster,\n          imdbUrl: `https://www.imdb.com/title/${imdbID}/`,\n          imdbId: imdbID,\n        });\n\n        setError(false);\n        setTitle('');\n      });\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', { 'is-danger': error })}\n              value={title}\n              onChange={({ target }) => {\n                setTitle(target.value);\n                setError(false);\n              }}\n            />\n          </div>\n\n          {error\n            && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n            )\n          }\n\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={movieSearch}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={() => {\n                addMovie(movie);\n                setMovie(null);\n              }}\n              disabled={!movie}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      {movie\n        && (\n        <div className=\"container\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard {...movie} />\n        </div>\n        )\n      }\n\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","const BASE_URL = 'https://www.omdbapi.com/?apikey=e3ae5d03&t=';\n\nexport const getFilm = filmTitle => fetch(`${BASE_URL}${filmTitle}`)\n  .then(response => response.json());\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(data);\n\n  const addMovie = (newMovie) => {\n    const { imdbId } = newMovie;\n    const isSearchSuccessful = movies.some(movie => movie.imdbId === imdbId);\n\n    if (!isSearchSuccessful) {\n      setMovies(currentMovies => [\n        ...currentMovies,\n        newMovie,\n      ]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}